openapi: 3.0.0
info:
  title: Motorcycle Store 1 API
  description: An API for managing motorcycles in a store
  version: 1.0.0
servers:
- url: http://localhost:8080
paths:
  /motorcycles:
    get:
      summary: Get a list of all motorcycles
      operationId: motorcycles_get
      responses:
        "200":
          description: A list of motorcycles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Motorcycle'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.default_controller
    post:
      summary: Add a new motorcycle to the store
      operationId: motorcycles_post
      requestBody:
        description: Motorcycle object to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Motorcycle'
        required: true
      responses:
        "201":
          description: Motorcycle successfully added
        "400":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /motorcycles/{id}:
    get:
      summary: Get a specific motorcycle by ID
      operationId: motorcycles_id_get
      parameters:
      - name: id
        in: path
        description: The motorcycle ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: A single motorcycle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Motorcycle'
        "404":
          description: Motorcycle not found
      x-openapi-router-controller: swagger_server.controllers.default_controller
    put:
      summary: Update a motorcycle by ID
      operationId: motorcycles_id_put
      parameters:
      - name: id
        in: path
        description: The motorcycle ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Motorcycle object with updated data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Motorcycle'
        required: true
      responses:
        "200":
          description: Motorcycle updated successfully
        "404":
          description: Motorcycle not found
      x-openapi-router-controller: swagger_server.controllers.default_controller
    delete:
      summary: Delete a motorcycle by ID
      operationId: motorcycles_id_delete
      parameters:
      - name: id
        in: path
        description: The motorcycle ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Motorcycle deleted successfully
        "404":
          description: Motorcycle not found
      x-openapi-router-controller: swagger_server.controllers.default_controller
components:
  schemas:
    Motorcycle:
      type: object
      properties:
        id:
          type: integer
          description: The motorcycle ID
          example: 1
        brand:
          type: string
          description: The brand of the motorcycle
          example: Yamaha
        model:
          type: string
          description: The model of the motorcycle
          example: YZF-R1
        year:
          type: integer
          description: The year of the motorcycle
          example: 2022
        price:
          type: number
          description: The price of the motorcycle
          example: 15000
      example:
        year: 2022
        price: 15000
        model: YZF-R1
        id: 1
        brand: Yamaha


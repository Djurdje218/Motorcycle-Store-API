# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Motorcycle(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, brand: str=None, model: str=None, year: int=None, price: float=None):  # noqa: E501
        """Motorcycle - a model defined in Swagger

        :param id: The id of this Motorcycle.  # noqa: E501
        :type id: int
        :param brand: The brand of this Motorcycle.  # noqa: E501
        :type brand: str
        :param model: The model of this Motorcycle.  # noqa: E501
        :type model: str
        :param year: The year of this Motorcycle.  # noqa: E501
        :type year: int
        :param price: The price of this Motorcycle.  # noqa: E501
        :type price: float
        """
        self.swagger_types = {
            'id': int,
            'brand': str,
            'model': str,
            'year': int,
            'price': float
        }

        self.attribute_map = {
            'id': 'id',
            'brand': 'brand',
            'model': 'model',
            'year': 'year',
            'price': 'price'
        }
        self._id = id
        self._brand = brand
        self._model = model
        self._year = year
        self._price = price

    @classmethod
    def from_dict(cls, dikt) -> 'Motorcycle':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Motorcycle of this Motorcycle.  # noqa: E501
        :rtype: Motorcycle
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Motorcycle.

        The motorcycle ID  # noqa: E501

        :return: The id of this Motorcycle.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Motorcycle.

        The motorcycle ID  # noqa: E501

        :param id: The id of this Motorcycle.
        :type id: int
        """

        self._id = id

    @property
    def brand(self) -> str:
        """Gets the brand of this Motorcycle.

        The brand of the motorcycle  # noqa: E501

        :return: The brand of this Motorcycle.
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand: str):
        """Sets the brand of this Motorcycle.

        The brand of the motorcycle  # noqa: E501

        :param brand: The brand of this Motorcycle.
        :type brand: str
        """

        self._brand = brand

    @property
    def model(self) -> str:
        """Gets the model of this Motorcycle.

        The model of the motorcycle  # noqa: E501

        :return: The model of this Motorcycle.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model: str):
        """Sets the model of this Motorcycle.

        The model of the motorcycle  # noqa: E501

        :param model: The model of this Motorcycle.
        :type model: str
        """

        self._model = model

    @property
    def year(self) -> int:
        """Gets the year of this Motorcycle.

        The year of the motorcycle  # noqa: E501

        :return: The year of this Motorcycle.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year: int):
        """Sets the year of this Motorcycle.

        The year of the motorcycle  # noqa: E501

        :param year: The year of this Motorcycle.
        :type year: int
        """

        self._year = year

    @property
    def price(self) -> float:
        """Gets the price of this Motorcycle.

        The price of the motorcycle  # noqa: E501

        :return: The price of this Motorcycle.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this Motorcycle.

        The price of the motorcycle  # noqa: E501

        :param price: The price of this Motorcycle.
        :type price: float
        """

        self._price = price
